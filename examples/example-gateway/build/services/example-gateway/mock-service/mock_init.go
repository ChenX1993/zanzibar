// Code generated by zanzibar
// @generated

// Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package examplegatewayservicegeneratedmock

import (
	"github.com/golang/mock/gomock"
	module "github.com/uber/zanzibar/examples/example-gateway/build/services/example-gateway/module"
	zanzibar "github.com/uber/zanzibar/runtime"

	barclientgenerated "github.com/uber/zanzibar/examples/example-gateway/build/clients/bar/mock-client"
	bazclientgenerated "github.com/uber/zanzibar/examples/example-gateway/build/clients/baz/mock-client"
	contactsclientgenerated "github.com/uber/zanzibar/examples/example-gateway/build/clients/contacts/mock-client"
	googlenowclientgenerated "github.com/uber/zanzibar/examples/example-gateway/build/clients/google-now/mock-client"
	multiclientgenerated "github.com/uber/zanzibar/examples/example-gateway/build/clients/multi/mock-client"
	barendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/bar"
	barendpointModule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/bar/module"
	bazendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/baz"
	bazendpointModule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/baz/module"
	contactsendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/contacts"
	contactsendpointModule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/contacts/module"
	googlenowendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/googlenow"
	googlenowendpointModule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/googlenow/module"
	multiendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/multi"
	multiendpointModule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/multi/module"
	baztchannelendpointgenerated "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/tchannel/baz"
	baztchannelendpointModule "github.com/uber/zanzibar/examples/example-gateway/build/endpoints/tchannel/baz/module"
	examplemiddlewaregenerated "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/example"
	examplemiddlewareModule "github.com/uber/zanzibar/examples/example-gateway/build/middlewares/example/module"
	quuxclientStatic "github.com/uber/zanzibar/examples/example-gateway/clients/quux/mock-client"
)

// MockClientNodes contains mock client dependencies
type MockClientNodes struct {
	Bar       *barclientgenerated.MockClient
	Baz       *bazclientgenerated.MockClient
	Contacts  *contactsclientgenerated.MockClient
	GoogleNow *googlenowclientgenerated.MockClient
	Multi     *multiclientgenerated.MockClient
	Quux      *quuxclientStatic.MockClient
}

// InitializeDependenciesMock fully initializes all dependencies in the dep tree
// for the example-gateway service with leaf nodes being mocks
func InitializeDependenciesMock(
	g *zanzibar.Gateway,
	ctrl *gomock.Controller,
) (*module.DependenciesTree, *module.Dependencies, *MockClientNodes) {
	tree := &module.DependenciesTree{}

	initializedDefaultDependencies := &zanzibar.DefaultDependencies{
		Logger:  g.Logger,
		Scope:   g.AllHostScope,
		Config:  g.Config,
		Channel: g.Channel,
	}

	mockClientNodes := &MockClientNodes{
		Bar:       barclientgenerated.NewMockClient(ctrl),
		Baz:       bazclientgenerated.NewMockClient(ctrl),
		Contacts:  contactsclientgenerated.NewMockClient(ctrl),
		GoogleNow: googlenowclientgenerated.NewMockClient(ctrl),
		Multi:     multiclientgenerated.NewMockClient(ctrl),
		Quux:      quuxclientStatic.NewMockClient(ctrl),
	}
	initializedClientDependencies := &module.ClientDependenciesNodes{}
	tree.Client = initializedClientDependencies
	initializedClientDependencies.Bar = mockClientNodes.Bar
	initializedClientDependencies.Baz = mockClientNodes.Baz
	initializedClientDependencies.Contacts = mockClientNodes.Contacts
	initializedClientDependencies.GoogleNow = mockClientNodes.GoogleNow
	initializedClientDependencies.Multi = mockClientNodes.Multi
	initializedClientDependencies.Quux = mockClientNodes.Quux

	initializedMiddlewareDependencies := &module.MiddlewareDependenciesNodes{}
	tree.Middleware = initializedMiddlewareDependencies
	initializedMiddlewareDependencies.Example = examplemiddlewaregenerated.NewMiddleware(&examplemiddlewareModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &examplemiddlewareModule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
	})

	initializedEndpointDependencies := &module.EndpointDependenciesNodes{}
	tree.Endpoint = initializedEndpointDependencies
	initializedEndpointDependencies.Bar = barendpointgenerated.NewEndpoint(&barendpointModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &barendpointModule.ClientDependencies{
			Bar: initializedClientDependencies.Bar,
		},
		Middleware: &barendpointModule.MiddlewareDependencies{
			Example: initializedMiddlewareDependencies.Example,
		},
	})
	initializedEndpointDependencies.Baz = bazendpointgenerated.NewEndpoint(&bazendpointModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &bazendpointModule.ClientDependencies{
			Baz: initializedClientDependencies.Baz,
		},
	})
	initializedEndpointDependencies.BazTChannel = baztchannelendpointgenerated.NewEndpoint(&baztchannelendpointModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &baztchannelendpointModule.ClientDependencies{
			Baz:  initializedClientDependencies.Baz,
			Quux: initializedClientDependencies.Quux,
		},
	})
	initializedEndpointDependencies.Contacts = contactsendpointgenerated.NewEndpoint(&contactsendpointModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &contactsendpointModule.ClientDependencies{
			Contacts: initializedClientDependencies.Contacts,
		},
	})
	initializedEndpointDependencies.Googlenow = googlenowendpointgenerated.NewEndpoint(&googlenowendpointModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &googlenowendpointModule.ClientDependencies{
			GoogleNow: initializedClientDependencies.GoogleNow,
		},
	})
	initializedEndpointDependencies.Multi = multiendpointgenerated.NewEndpoint(&multiendpointModule.Dependencies{
		Default: initializedDefaultDependencies,
		Client: &multiendpointModule.ClientDependencies{
			Multi: initializedClientDependencies.Multi,
		},
	})

	dependencies := &module.Dependencies{
		Default: initializedDefaultDependencies,
		Endpoint: &module.EndpointDependencies{
			Bar:         initializedEndpointDependencies.Bar,
			Baz:         initializedEndpointDependencies.Baz,
			BazTChannel: initializedEndpointDependencies.BazTChannel,
			Contacts:    initializedEndpointDependencies.Contacts,
			Googlenow:   initializedEndpointDependencies.Googlenow,
			Multi:       initializedEndpointDependencies.Multi,
		},
	}

	return tree, dependencies, mockClientNodes
}
