// Code generated by mockery v1.0.0
package corgeClient

import context "context"
import corge "github.com/uber/zanzibar/examples/example-gateway/build/gen-code/clients/corge/corge"
import mock "github.com/stretchr/testify/mock"

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

// EchoString provides a mock function with given fields: ctx, reqHeaders, args
func (_m *MockClient) EchoString(ctx context.Context, reqHeaders map[string]string, args *corge.Corge_EchoString_Args) (string, map[string]string, error) {
	ret := _m.Called(ctx, reqHeaders, args)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, map[string]string, *corge.Corge_EchoString_Args) string); ok {
		r0 = rf(ctx, reqHeaders, args)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 map[string]string
	if rf, ok := ret.Get(1).(func(context.Context, map[string]string, *corge.Corge_EchoString_Args) map[string]string); ok {
		r1 = rf(ctx, reqHeaders, args)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(map[string]string)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, map[string]string, *corge.Corge_EchoString_Args) error); ok {
		r2 = rf(ctx, reqHeaders, args)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
